<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>九天学者</title>
  <subtitle>Knowledge is Power</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-19T14:36:40.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>九天学者</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>注释代码的正确姿势之一：Fortran</title>
    <link href="http://yoursite.com/2017/03/19/20170319-Doxygen-md/"/>
    <id>http://yoursite.com/2017/03/19/20170319-Doxygen-md/</id>
    <published>2017-03-18T18:30:35.000Z</published>
    <updated>2017-03-19T14:36:40.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>相信用过<a href="http://www.vtk.org/doc/release/7.1/html/index.html" target="_blank" rel="external">VTK</a>的同学一定对其说明文档很熟悉，并获益不少。他的说明文档是如此的强大，是怎么制作的呢？这将是本文的重点。  </li>
<li>可能有人会问，做这个文档有啥用？那么我告诉你，有如此问题说明你对计算机程序接触的还很初步，不适合看本文。至少在你没有写过大型程序，或者根本就没用过开源的大型程序。  </li>
<li>因为对于一个类似于VTK这样的大型函数库，其C++类就有几百个，每个类的功能是什么？如何调用？它有哪些成员变量？成员函数？类与类之间的关系又是如何？对于这些问题如果没有很好的方法表达，你要看懂几乎是不可能的，更别谈使用和修改了。</li>
<li>本人最近就在修改/开发一个热液系统模拟的程序，这个程序是Lewis博士用Fortran写的，总共有81和Fortran函数和文件。刚开始接触到这个根本读不下去，简直让人奔溃。后来各种不断的折腾，终于知道怎么用<a href="http://www.stack.nl/~dimitri/doxygen/download.html" target="_blank" rel="external">Doxygen</a>自动生成文档了。下面就是我要讲的经验。  </li>
</ul>
<h1 id="实例：-fatiando-document"><a href="#实例：-fatiando-document" class="headerlink" title="实例： fatiando document"></a>实例： <a href="http://cosscholar.coding.me/fatiando_doc/" target="_blank" rel="external">fatiando document</a></h1><div align="center"><img src="http://ocp8aowoj.bkt.clouddn.com/doxygen_logo.gif"></div><br><div align="center"><img src="http://ocp8aowoj.bkt.clouddn.com/vtk_3.png"></div>

<a id="more"></a>
<h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>在Mac的终端输入命令：<code>brew install doxygen</code>即可。</p>
<h2 id="Graphviz"><a href="#Graphviz" class="headerlink" title="Graphviz"></a><a href="http://www.graphviz.org" target="_blank" rel="external">Graphviz</a></h2><p>这是配合Doxygen一起使用自动生成函数/类之间依赖关系图的工具。<br>可以在官网上<a href="http://www.pixelglow.com/graphviz/download/" target="_blank" rel="external">下载GUI版</a>，也可以使用brw安装：<code>brew install graphviz</code>。<br>摘要里面的依赖图就是用这个做出来的。</p>
<h2 id="MathjAX"><a href="#MathjAX" class="headerlink" title="MathjAX"></a><a href="https://github.com/mathjax/MathJax.git" target="_blank" rel="external">MathjAX</a></h2><p>这个是为了在注释过程中书写数学公式，这个一般是网络版服务器上用的，但也可以下载到本地使用。利用如下命令安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo git <span class="built_in">clone</span> https://github.com/mathjax/MathJax.git /opt/MathJax</div></pre></td></tr></table></figure></p>
<p>将这个安装地址填入配置文件中的<code>MATHJAX_RELPATH</code>参数（如下）。</p>
<ul>
<li><strong>注释中的使用：</strong> <code>\f$ \alpha + \eta \f$</code>，使用<code>\f$</code>括起来，书写是与Latex一致的。</li>
</ul>
<h1 id="配置使用"><a href="#配置使用" class="headerlink" title="配置使用"></a>配置使用</h1><p>对于一个新的项目，只需要在终端输入命令<code>doxygen -s -g</code>即可，会自动生成一个以<a href="ttp://ocp8aowoj.bkt.clouddn.com/Doxyfile" target="_blank" rel="external">Doxyfile</a>为文件名的配置文件。这里的-s命令是生成一个简化的版本，如果去掉这个参数则会生成一个完整的。然后在配置文件里面修改参数即可。主要的几个参数如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">PROJECT_NAME           = FISHES</div><div class="line">PROJECT_NUMBER         = 1.3</div><div class="line">OUTPUT_DIRECTORY       = ../fortran/FISHES</div><div class="line">EXTRACT_ALL            = YES</div><div class="line">EXTRACT_STATIC         = YES</div><div class="line">EXTRACT_LOCAL_CLASSES  = YES</div><div class="line"><span class="comment"># 使用graphviz</span></div><div class="line">HAVE_DOT               = YES</div><div class="line">CALL_GRAPH             = YES</div><div class="line">CALLER_GRAPH           = YES</div><div class="line">DOT_IMAGE_FORMAT       = svg</div><div class="line"><span class="comment"># 使用mathjax</span></div><div class="line">USE_MATHJAX            = YES</div><div class="line">MATHJAX_RELPATH        = /opt/MathJax</div><div class="line"><span class="comment"># 使用Markdown（主页等）和fortran 90</span></div><div class="line">FILE_PATTERNS          = *.c \</div><div class="line">                         *.md \</div><div class="line">                         *.f90 \</div></pre></td></tr></table></figure></p>
<h1 id="Fortran注释规范"><a href="#Fortran注释规范" class="headerlink" title="Fortran注释规范"></a>Fortran注释规范</h1><p>参考<a href="http://www.dougdevel.org/index.php" target="_blank" rel="external">DOUG</a>，这是个很好的学习素材。将其代码下载，然后稍微修改一下配置文件（<code>INPUT</code>）即可生成文档。下面是我在使用过程中的总结。</p>
<h2 id="普通注释"><a href="#普通注释" class="headerlink" title="普通注释"></a>普通注释</h2><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">!&gt; 这是个普通注释</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;相信用过&lt;a href=&quot;http://www.vtk.org/doc/release/7.1/html/index.html&quot;&gt;VTK&lt;/a&gt;的同学一定对其说明文档很熟悉，并获益不少。他的说明文档是如此的强大，是怎么制作的呢？这将是本文的重点。  &lt;/li&gt;
&lt;li&gt;可能有人会问，做这个文档有啥用？那么我告诉你，有如此问题说明你对计算机程序接触的还很初步，不适合看本文。至少在你没有写过大型程序，或者根本就没用过开源的大型程序。  &lt;/li&gt;
&lt;li&gt;因为对于一个类似于VTK这样的大型函数库，其C++类就有几百个，每个类的功能是什么？如何调用？它有哪些成员变量？成员函数？类与类之间的关系又是如何？对于这些问题如果没有很好的方法表达，你要看懂几乎是不可能的，更别谈使用和修改了。&lt;/li&gt;
&lt;li&gt;本人最近就在修改/开发一个热液系统模拟的程序，这个程序是Lewis博士用Fortran写的，总共有81和Fortran函数和文件。刚开始接触到这个根本读不下去，简直让人奔溃。后来各种不断的折腾，终于知道怎么用&lt;a href=&quot;http://www.stack.nl/~dimitri/doxygen/download.html&quot;&gt;Doxygen&lt;/a&gt;自动生成文档了。下面就是我要讲的经验。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;实例：-fatiando-document&quot;&gt;&lt;a href=&quot;#实例：-fatiando-document&quot; class=&quot;headerlink&quot; title=&quot;实例： fatiando document&quot;&gt;&lt;/a&gt;实例： &lt;a href=&quot;http://cosscholar.coding.me/fatiando_doc/&quot;&gt;fatiando document&lt;/a&gt;&lt;/h1&gt;&lt;div align=center&gt;&lt;img src=&quot;http://ocp8aowoj.bkt.clouddn.com/doxygen_logo.gif&quot; /&gt;&lt;/div&gt;&lt;br&gt;&lt;div align=center&gt;&lt;img src=&quot;http://ocp8aowoj.bkt.clouddn.com/vtk_3.png&quot; /&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="代码注释" scheme="http://yoursite.com/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E9%87%8A/"/>
    
      <category term="doxygen" scheme="http://yoursite.com/tags/doxygen/"/>
    
  </entry>
  
  <entry>
    <title>九天学者-VT访学记之一：前期准备</title>
    <link href="http://yoursite.com/2017/03/11/visiting-vt-prep/"/>
    <id>http://yoursite.com/2017/03/11/visiting-vt-prep/</id>
    <published>2017-03-11T05:02:56.000Z</published>
    <updated>2017-03-11T06:49:03.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>只要做好知识和技能的储备，随时都有机会有梦想倾向你。</p>
</blockquote>
<ul>
<li><strong>访问国家</strong>：美国</li>
<li><strong>目标高校</strong>：弗吉尼亚理工大学(<a href="http://search.vt.edu/search/person.html?person=1329805" target="_blank" rel="external">Virginia Tec</a>)，全称是Virginia Polytechnic Institute and State University<br>　　　　　全美实力最强的四大理工学院（麻省理工，加州理工，佐治亚理工学院）</li>
<li><strong>所在城市</strong>：弗吉尼亚州-黑堡(Blacksburg)<br><img src="http://ocp8aowoj.bkt.clouddn.com/vt-logo.png" alt="vt-logo"></li>
</ul>
<a id="more"></a>
<h1 id="与导师沟通"><a href="#与导师沟通" class="headerlink" title="与导师沟通"></a>与导师沟通</h1><h1 id="办理签证"><a href="#办理签证" class="headerlink" title="办理签证"></a>办理签证</h1><h1 id="租房"><a href="#租房" class="headerlink" title="租房"></a>租房</h1><h1 id="订机票"><a href="#订机票" class="headerlink" title="订机票"></a>订机票</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;只要做好知识和技能的储备，随时都有机会有梦想倾向你。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;访问国家&lt;/strong&gt;：美国&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目标高校&lt;/strong&gt;：弗吉尼亚理工大学(&lt;a href=&quot;http://search.vt.edu/search/person.html?person=1329805&quot;&gt;Virginia Tec&lt;/a&gt;)，全称是Virginia Polytechnic Institute and State University&lt;br&gt;　　　　　全美实力最强的四大理工学院（麻省理工，加州理工，佐治亚理工学院）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;所在城市&lt;/strong&gt;：弗吉尼亚州-黑堡(Blacksburg)&lt;br&gt;&lt;img src=&quot;http://ocp8aowoj.bkt.clouddn.com/vt-logo.png&quot; alt=&quot;vt-logo&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="留学" scheme="http://yoursite.com/categories/%E7%95%99%E5%AD%A6/"/>
    
    
      <category term="美国" scheme="http://yoursite.com/tags/%E7%BE%8E%E5%9B%BD/"/>
    
      <category term="旅行" scheme="http://yoursite.com/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Sphinx炼成记</title>
    <link href="http://yoursite.com/2017/03/03/sphinx/"/>
    <id>http://yoursite.com/2017/03/03/sphinx/</id>
    <published>2017-03-03T12:29:46.000Z</published>
    <updated>2017-03-17T07:45:58.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://matplotlib.org/_static/logo2.svg" alt="hydrothermal"></p>
<blockquote>
<p>Latex虽然强大，但是不适合做在线文档。最吸引我的一个在线文档就是<a href="http://matplotlib.org/gallery.html" target="_blank" rel="external">MatplotLib</a>官方网站上的<strong>Gallery</strong>，将图像和代码结合在一起，查询和学习起来非常方便。一直以来就像折腾一下Sphinx，但是没下决心，从现在开始我将从0开始学习Sphinx的点点滴滴记录下来。</p>
</blockquote>
<a id="more"></a>
<h1 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h1><h2 id="安装sphinx"><a href="#安装sphinx" class="headerlink" title="安装sphinx"></a>安装sphinx</h2><p>安装sphinx非常简单，直接在终端输入命令:<code>easy_install -U sphinx</code>等待完成即可。前提是你必须安装了python，我安装的是anaconda，python的版本是2.7. 完成之后应该会是如下的显示<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">Searching <span class="keyword">for</span> sphinx</div><div class="line">Reading https://pypi.python.org/simple/sphinx/</div><div class="line">Downloading https://pypi.python.org/packages/a7/df/4487783152b14f2b7<span class="built_in">cd</span>0b0c9afb119b262c584bf972b90ab544b61b74c62/Sphinx-1.5.3.tar.gz<span class="comment">#md5=6a9522761bde569a3d50cc4509e313d9</span></div><div class="line">Best match: Sphinx 1.5.3</div><div class="line">Processing Sphinx-1.5.3.tar.gz</div><div class="line">Writing /var/folders/lt/s5pnwvx97gg1yqqtdf363ljc0000gn/T/easy_install-rt2YYP/Sphinx-1.5.3/setup.cfg</div><div class="line">Running Sphinx-1.5.3/setup.py -q bdist_egg --dist-dir /var/folders/lt/s5pnwvx97gg1yqqtdf363ljc0000gn/T/easy_install-rt2YYP/Sphinx-1.5.3/egg-dist-tmp-_AW5_W</div><div class="line">warning: no files found matching <span class="string">'sphinx/locale/.tx/config'</span></div><div class="line">no previously-included directories found matching <span class="string">'doc/_build'</span></div><div class="line">no previously-included directories found matching <span class="string">'sphinx/locale/.tx'</span></div><div class="line">creating /Users/kakushi/anaconda/lib/python2.7/site-packages/Sphinx-1.5.3-py2.7.egg</div><div class="line">Extracting Sphinx-1.5.3-py2.7.egg to /Users/kakushi/anaconda/lib/python2.7/site-packages</div><div class="line">Adding Sphinx 1.5.3 to easy-install.pth file</div><div class="line">Installing sphinx-apidoc script to /Users/kakushi/anaconda/bin</div><div class="line">Installing sphinx-build script to /Users/kakushi/anaconda/bin</div><div class="line">Installing sphinx-quickstart script to /Users/kakushi/anaconda/bin</div><div class="line">Installing sphinx-autogen script to /Users/kakushi/anaconda/bin</div><div class="line"></div><div class="line">Installed /Users/kakushi/anaconda/lib/python2.7/site-packages/Sphinx-1.5.3-py2.7.egg</div><div class="line">Processing dependencies <span class="keyword">for</span> sphinx</div><div class="line">Finished processing dependencies <span class="keyword">for</span> sphinx</div></pre></td></tr></table></figure></p>
<h2 id="创建sphinx文档"><a href="#创建sphinx文档" class="headerlink" title="创建sphinx文档"></a>创建sphinx文档</h2><p>新建一个目录，专门存放sphinx文档项目。我这里也配合了git同步到coding或者github上。于新建的这个目录下，在终端中输入命令:<code>sphinx-quickstart</code>，sphinx会自动处理文档系统所需的每一个步骤，你只需要关注项目名称和作者以及版本就行，其他的都可以一路下一步。<br>创建完毕之后会提示你：同时也创建了一个makefile，用于生成文档（关于makefile的使用请自行学习）。<br>生成pdf: <code>make latexpdf</code>，会在<code>./_build/latex</code>目录下生成一个以你项目名称命名的pdf文档。<br>上面这些步骤都是默认的，那么如何写自己的文档呢？</p>
<h2 id="创建自己的文本并编译"><a href="#创建自己的文本并编译" class="headerlink" title="创建自己的文本并编译"></a>创建自己的文本并编译</h2><p>创建一个source文件夹，如果有就省略此步骤。然后确定<code>conf.py</code>和<code>index.rst</code>两个文件在source目录下，然后需要修改makefile内容<code>SOURCEDIR     = source</code>（指定代码路径）。<br>现在可以创建自己的文档了，在source目录下创建一个<code>helloworld.rst</code>文件（当然文件名你可以随便命名），里面内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">The first file of cosscholar</div><div class="line">=================================</div><div class="line"></div><div class="line">my first sphinx text, perfect</div></pre></td></tr></table></figure></p>
<p>然后修改<code>index.rst</code>，添加这个文档进来:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Welcome to Test of sphinx</div><div class="line">================================</div><div class="line"></div><div class="line">.. toctree::</div><div class="line">   :maxdepth: 1</div><div class="line">   </div><div class="line">   helloworld</div></pre></td></tr></table></figure></p>
<p>最后在主目录下运行命令<code>make html</code>或者<code>make latexpdf</code>，前者是生成html，后者是pdf，可以在_build目录下查看。注意：目前这个步骤坐下来，是不支持中文文档的，如果要支持中文，请另外折腾。</p>
<h2 id="部署到Read-the-Docs"><a href="#部署到Read-the-Docs" class="headerlink" title="部署到Read the Docs"></a>部署到<a href="https://readthedocs.org" target="_blank" rel="external">Read the Docs</a></h2><p>我最初的想法是将文档项目的代码托管到coding上（因为国内服务器快一些），然后把coding的项目链接到Read teh docs上。可是貌似只能与GitHub链接。<br>试了一把，部署的慢到哭，所以暂且不折腾这个，直接在本地自己查看就行，在浏览器中加入书签。一个项目整晚了在决定发布的问题吧。</p>
<h2 id="sphinx主题"><a href="#sphinx主题" class="headerlink" title="sphinx主题"></a>sphinx主题</h2><p>fatiando中用到的主题貌似是<code>sphinx_bootstrap_theme</code>可以通过pip安装，刚刚测试了一下fatiando的文档，发现他用了gallery功能，先安装一下试试<code>pip install sphinx_gallery</code>. Fatando的文档系统是一个很好的例子，可以参考学习。没毛病，就是这两个库，安装了就好了，编译通过，跟官网上的一模一样。</p>
<h1 id="第二天"><a href="#第二天" class="headerlink" title="第二天"></a>第二天</h1><p>准备工作做完了，也有了参考资料，那么接下来自己做一个看看。</p>
<h2 id="以sphinx-bootstrap-theme主题自己做一个文档"><a href="#以sphinx-bootstrap-theme主题自己做一个文档" class="headerlink" title="以sphinx_bootstrap_theme主题自己做一个文档"></a>以<code>sphinx_bootstrap_theme</code>主题自己做一个文档</h2><h1 id="第三天"><a href="#第三天" class="headerlink" title="第三天"></a>第三天</h1><p>Sphinx其中一个最主要的功能就是做程序的说明文档及cookbook。</p>
<h2 id="automudule"><a href="#automudule" class="headerlink" title="automudule"></a>automudule</h2><p>自动加载程序模块，呈现函数及类的说明，但是可以隐藏代码，不过有显示代码的链接按钮。</p>
<p>使用这个功能之前，需要在<code>conf.py</code>中做一些设置：</p>
<ul>
<li><p>添加程序包的目录：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line">sys.path.append(<span class="string">'/Users/kakushi/Study/CoScholar_Py'</span>) <span class="comment">#这是个例子</span></div></pre></td></tr></table></figure>
</li>
<li><p>扩展中添加<code>autodoc</code>功能：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">extensions = [</div><div class="line">    <span class="string">'sphinx.ext.autodoc'</span>,    <span class="comment">#就是这一项</span></div><div class="line">    <span class="string">'sphinx.ext.autosummary'</span>,</div><div class="line">    <span class="string">'sphinx.ext.coverage'</span>,</div><div class="line">    <span class="string">'sphinx.ext.mathjax'</span>,</div><div class="line">    <span class="string">'sphinx.ext.doctest'</span>,</div><div class="line">    <span class="string">'sphinx.ext.viewcode'</span>,</div><div class="line">    <span class="string">'sphinx.ext.extlinks'</span>,</div><div class="line">    <span class="string">'matplotlib.sphinxext.plot_directive'</span>,</div><div class="line">    <span class="string">'sphinx_gallery.gen_gallery'</span>,</div><div class="line">]</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>当上面几步设置完之后，在<code>.rst</code>文件中需要导入程序说明的地方加入代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.. automodule:: RWData.ReadDat</div><div class="line">    :no-members:</div><div class="line">    :no-inherited-members:</div></pre></td></tr></table></figure></p>
<p>里面的两个参数也可不要，根据情况。</p>
<h2 id="literalinclude"><a href="#literalinclude" class="headerlink" title="literalinclude"></a>literalinclude</h2><p>从文件中包含代码（比如python,bash文件等）到rst文件中，这个在创建文档中的使用情景大概是这样的:比如你利用python代码做了一张图，想在图标题添加一个超链接用于查看绘图代码。此时你可以创建一个rst文件，这个rst文件的标题就是图片的标题，然后下面的内容是<code>literalinclude</code>，参照GMT的gallary也可以在这段代码上面显示这个图片。</p>
<ul>
<li><p>rst文件内容（假如其文件名为:<code>fig.rst</code>）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">.. _HeatFlux:</div><div class="line"></div><div class="line">地球的热通量分布比例</div><div class="line">======================================</div><div class="line">根据R.P. Lowell(2014)表1的数据，利用python做出一个统计图，更直观。</div><div class="line"></div><div class="line">.. image:: ../../figure/Bob2014Elsevier_Tab1.*</div><div class="line">   :width: 25 cm</div><div class="line">   :align: center</div><div class="line">   </div><div class="line">---------</div><div class="line"></div><div class="line">.. literalinclude:: fig_Bob2014_Tab1.py</div><div class="line">   :language: python</div></pre></td></tr></table></figure>
</li>
<li><p>利用<code>ref</code>功能引用此rst文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">图1 :ref:`HeatFlux`</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>注意：<code>ref</code>这里的<code>HeatFlux</code>标签一定要与上面rst文件中的标签一致。<br>Tips: 关于程序文档的东西，可以参考fatiando和GMT进行学习。</p>
</blockquote>
<h1 id="第三天-1"><a href="#第三天-1" class="headerlink" title="第三天"></a>第三天</h1><p>经过前几天的折腾，终于找到一个编辑和预览rst的好方法，虽然还有瑕疵，但总比之前的<code>make html</code>之后才能看到效果要好的多。  </p>
<ul>
<li><strong>Atom</strong> + <strong>rst-preview-pandoc</strong><br>安装之后打开rst文件使用快捷键<code>ctrl+shift+e</code>即可实现实时预览。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://matplotlib.org/_static/logo2.svg&quot; alt=&quot;hydrothermal&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Latex虽然强大，但是不适合做在线文档。最吸引我的一个在线文档就是&lt;a href=&quot;http://matplotlib.org/gallery.html&quot;&gt;MatplotLib&lt;/a&gt;官方网站上的&lt;strong&gt;Gallery&lt;/strong&gt;，将图像和代码结合在一起，查询和学习起来非常方便。一直以来就像折腾一下Sphinx，但是没下决心，从现在开始我将从0开始学习Sphinx的点点滴滴记录下来。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
      <category term="Sphinx" scheme="http://yoursite.com/tags/Sphinx/"/>
    
  </entry>
  
  <entry>
    <title>如何在Mac下愉快的做科研</title>
    <link href="http://yoursite.com/2017/03/03/mac_research/"/>
    <id>http://yoursite.com/2017/03/03/mac_research/</id>
    <published>2017-03-03T11:29:46.000Z</published>
    <updated>2017-03-18T05:49:42.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1488533058824&amp;di=bb50ad63251a3e9ab7518ce443c119a0&amp;imgtype=0&amp;src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F0330478554c70a700000158fcce4cb0.jpg" alt="hydrothermal"></p>
<a id="more"></a>
<blockquote>
<p><strong>工欲善其事，必先利其器。</strong><br>　　　　　　　　　　　－－《论语》<br><strong>为什么要写这篇博文：</strong> 博主是一个地球物理学在读博士生，如果了解这个专业的读者都知道，在科研过程中会用到很多很多计算机的技能做计算、成图。当然了，慢慢的就会培养出对编程方面的兴趣，这回同时培养出一种说不出是好是坏的习惯：<strong>完</strong>(Qiang)<strong>美</strong>(Po)<strong>主</strong>(Zheng)<strong>义</strong>。所以这篇文章就是为那些有同样习惯的同学们一个参考，这也是本人在不断探索实践中总结出来的一些经验。</p>
</blockquote>
<h1 id="Mac下的科研工具汇总"><a href="#Mac下的科研工具汇总" class="headerlink" title="Mac下的科研工具汇总"></a>Mac下的科研工具汇总</h1><p>这里所说的科研工具指的是一些程序或者软件，能在你的科研路上为你助力的好助手。主要有一下几类</p>
<h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>开发环境也就是通常说的编译/编程环境。我通常会用到的编程语言/脚本语言有: <code>C/C++</code>,<code>Python</code>,<code>Fortran</code>,<code>GMT</code>,<code>Matlab/Octave</code></p>
<h3 id="计算类"><a href="#计算类" class="headerlink" title="计算类"></a>计算类</h3><ul>
<li><p><strong><a href="https://registrationcenter.intel.com/en/products/" target="_blank" rel="external">Intel® Parallel Studio XE Composer Edition for C++ OS X</a></strong>: <code>C/C++</code>，<code>Fortran</code><br>当然，Mac自带的gfortran和gcc, g++这些都可以满足基本编程需要，但是我需要用到MKL等一些计算库，所以安装了Intel的开发套件，学生可以凭借edu邮箱免费申请education版本。 </p>
</li>
<li><p><strong><a href="https://www.continuum.io/downloads/" target="_blank" rel="external">Anaconda</a></strong>: <code>Python</code>,<a href="http://www.fatiando.org/docs.html" target="_blank" rel="external"><code>Fatiano</code></a>,<code>Jupyter-notebook</code><br>我最喜欢的一个工具就是<code>Jupyter-notebook</code>，这是一个非常强大的工具，不仅可以做笔记，也可以将程序代码放在cell里面直接运行，紧接着就可以出图。最后还可以导出pdf文档。结合版本控制，就可以全程记录你的整个研究的细节过程，从此可以向不可重复研究说拜拜了。<br>这个notebook是要以python为核心驱动的，而安装python可以有一个简单方式，那就是anaconda。conda是专门为科学计算整合的一个python发行版本，里面基本上包含了你能够用到的一些库，如果需要安装特定的库，可以直接用<code>pip install</code>命令很容易的安装。<br>最后一个使用<code>Python</code>的理由可能就是<code>Fatiando</code>这个地球物理软件包了，这是一位巴西的地球物理学者开发的，而且一直在更新中。里面有很多重、磁、震方面的程序，如正演、延拓、欧拉反褶积什么的。</p>
</li>
</ul>
<h3 id="写作类"><a href="#写作类" class="headerlink" title="写作类"></a>写作类</h3><ul>
<li><p><strong><a href="http://tug.org/mactex/" target="_blank" rel="external">MacTex</a></strong><br>Mac系统下虽然有了word版本，但也不是很好用。首先当文件大了之后会很容易奔溃；第二没法进行版本控制；第三参考文献、公式编号、交叉引用等等都不是很好用。而且你还可能会化很多时间去调整其排版。相信刚入门MAC的同学也不会倾向于Pages，所以这些烦恼都可以通过一个名叫Latex的神器来解决。<br>现在所有的英文期刊都是支持Latex投稿的（国内有部分也支持了），这也是我选择Latex的原因。每个期刊都有自己的Latex模板，你只需要专注于你的写作，不用操心排版等所有码字之外的事情。<br>关于参考文献，我会在下面推荐使用<code>Mendeley</code>，结合Latex使用简直就是神搭档。</p>
</li>
<li><p><strong>印象笔记</strong>+<strong>马克飞象</strong><br>印象笔记大家肯定都很熟悉了，但是把他和马克飞象结合起来用会更有意思，但是马克飞象是收费的，反正我是买了一年的vip，只因上面提到的那个习惯。</p>
</li>
<li><p><strong>Hexo</strong>+<strong>Coding</strong><br>这个属于高级篇了，这是写个人博客的工具。有兴趣的可以自己折腾或者找我，我记录了这个安装和使用过程，但是是卸载印象笔记里面的，懒得放到博客上了，有需要的可以找我<a href="1013282124@qq.com">分享</a>给你。</p>
</li>
<li><p><strong>Sphinx</strong><br>这个工具主要用于写读书（期刊、专著等文献）笔记，以及将一些绘图代码直接放到Gallery里面方便查找和再利用。其实Sphinx还可以做很多东西，比如Python程序库的说明文档、写文章+照片=记录生活等等，其他功能自己发现。<br>而且这个还可以放到网上可以作为自己的个人主页（跟个人博客是不同类型，偏重点不同）：在coding里面创建一个开放的项目，然后上传sphinx的_build内容，最后启动项目的展示功能即可。<br><strong>restructuredtext预览及编辑</strong>工具：尝试过VSCode得关于rst的插件，结果发现很不稳定，经常打不开；也尝试过sphinx-GUI，也不好用：第一是不能实时预览必须点击build才能看到结果；第二是预览和写作不能同步滚动，最终放弃。目前看到最好用的还是Atom配合其插件<code>rst-preview-pandoc</code>，安装方法与VSCode插件安装类似。</p>
</li>
</ul>
<h3 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h3><ul>
<li><strong>VScode</strong><br>这个是我用的最习惯的一个功能强大+颜值高的编辑器。支持各种语言的语法高亮，而且与Bash终端集成，也可以有插件支持直接运行python，bash等程序。估计Atom也是很强大的，不过先入为主啦，我还是习惯首先选择vscode。<br>我个人觉得效率最高的编程姿势还是在文本编辑器下编辑代码，然后写一个makefile来编译。本人在使用MAC之前也是VSstudio的忠实用户啊，不过MAC系统逼着自己用这种makefile的方式编程，熬过了前两天的懵逼状态，后面就会发现这种方式确实是最高效的，然后配合<strong>git</strong>进行版本管理，简直是无敌了。</li>
<li><p><strong>git</strong><br>关于git的简单用法，我只想列举一下几个命令:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">git init</div><div class="line">git remote add origin http://xxxxxx</div><div class="line">git add --all</div><div class="line">git status</div><div class="line">git commit -m<span class="string">"message"</span></div><div class="line">git push</div><div class="line">git brunch</div><div class="line">git brunch &lt;new brunch&gt;</div><div class="line">git checkout &lt;brunch2&gt;</div><div class="line">git merge &lt;brunch1&gt;</div></pre></td></tr></table></figure>
</li>
<li><p><strong>Atom</strong><br>一个比VScode诞生更早的一个非常强大的编辑器，这里不过多介绍，我目前只是用其边际rst，因为vscode的rst预览插件实在是不好用。</p>
</li>
<li><strong>Doxygen</strong><br>用于生成程序的以来关系以及说明文档，但前提是你的程序代码必须按照Doxygen的注释规范进行注释。我主要用它进行C/C++程序和Fortran程序的文档生成。安装很简单直接用<code>brew install doxygen</code>安装即可</li>
<li><strong>Graphviz</strong><br>这是配合Doxygen使用的，主要用于生成函数或者类之间的依赖关系图的，这个过程都是自动的，只需要在配置文件里面打开<code>CALL_GRAPH</code>以及<code>CALLER_GRAPH</code>，和使用<code>DOT</code>等。<br>这个工具也可以单独使用，其官网上有MAC系统下的GUI版本。单独使用比如做流程图，其他的一些结构图之类的，程序代码的依赖关系图只是这个工具功能的冰山一角，更多的强大功能还需自己根据需要慢慢挖掘。</li>
</ul>
<blockquote>
<p>写不下去了，放的时间太久了，积累了很多，一下写不完，以后慢慢完善吧。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1488533058824&amp;amp;di=bb50ad63251a3e9ab7518ce443c119a0&amp;amp;imgtype=0&amp;amp;src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F0330478554c70a700000158fcce4cb0.jpg&quot; alt=&quot;hydrothermal&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>热液流体循环演化的数值模拟</title>
    <link href="http://yoursite.com/2017/01/04/20170104/"/>
    <id>http://yoursite.com/2017/01/04/20170104/</id>
    <published>2017-01-04T11:29:46.000Z</published>
    <updated>2017-03-11T04:48:21.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/uploads/hydrothermal.png" alt="hydrothermal"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/uploads/hydrothermal.png&quot; alt=&quot;hydrothermal&quot;&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="学术前沿" scheme="http://yoursite.com/tags/%E5%AD%A6%E6%9C%AF%E5%89%8D%E6%B2%BF/"/>
    
  </entry>
  
  <entry>
    <title>强大的Python与GMT</title>
    <link href="http://yoursite.com/2016/09/28/PythonandGMT/"/>
    <id>http://yoursite.com/2016/09/28/PythonandGMT/</id>
    <published>2016-09-28T11:51:00.000Z</published>
    <updated>2017-03-11T04:47:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Python绘图与GMT对比</strong></p>
<hr>
<p>研究地球科学的学者没有不知道GMT的，相信大多数GMT使用者都是为了利用其地图投影，其实还有一些数据处理方面的功能，可能大家用的比较少。GMT在（数据）投影图方面表现确实很好，但是其脚本编写相对于编程语言欠灵活。这里介绍一种Python的库—Matplotlib-&gt;Basemap，其功能之强大较GMT有过之而无不及。介绍Python的好处在于其不仅能精美绘图，而且也可以做各种计算，毕竟是高级编程语言。只要学会用Python，在科研过程中的所有计算和绘图都能得到解决而且是优雅的解决。</p>
<a id="more"></a>
<h1 id="Basemap安装"><a href="#Basemap安装" class="headerlink" title="Basemap安装"></a>Basemap安装</h1><p>做科研用Python，推荐安装Python科学计算发行版<a href="https://www.continuum.io/downloads" target="_blank" rel="external">Anaconda</a>。安装好了Anaconda之后应该是自带有Basemap包的。</p>
<h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><p>如果已经安装了Anaconda则略过此节。如果之前安装过Python，则最好是将之前安装的所有的python都卸载掉，注意对于python进行科学计算，安装Anaconda2.7就足够了，里面集成了python，可以直接在notepad++下运行，也可以在vs2015下编写和运行。</p>
<h3 id="下载安装anaconda"><a href="#下载安装anaconda" class="headerlink" title="下载安装anaconda"></a>下载安装<a href="https://www.continuum.io/downloads" target="_blank" rel="external">anaconda</a></h3><p><img src="http://ocp8aowoj.bkt.clouddn.com/AnacondaSite.png" alt="Anaconda| center|800x0"> </p>
<h2 id="查看包"><a href="#查看包" class="headerlink" title="查看包"></a>查看包</h2><p>打开AnacondaPrompt，在终端输入<code>pip list</code>，然后会有下面这样的显示<br><img src="http://ocp8aowoj.bkt.clouddn.com/AnacondaList.png" alt="AnacondaList| center|800x0"> </p>
<h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h2><p>如果没有找到’basemap’，则输入命令:<code>pip install basemap</code>即可自动安装<strong>basemap包</strong><br>在地学绘图中难免绘制各种数据（比如地形、重力场、磁场或者其他的网格数据），GMT中使用的大多是nc（netCDF)格式。Basemap包也是一样的使用nc格式，但是需要安装<a href="https://pypi.python.org/pypi/netCDF4" target="_blank" rel="external">netCDF包</a>，自动安装即可：输入命令<code>pip install netCDF4</code>，等待安装完成。然后测试能否成功导入nc包：<code>from netCDF4 import Dataset as NetCDFFile</code>，如果出现错误，则需要用命令<code>pip install -U numpy</code>安装一次numpy，等待安装完成，再测试，应该就没问题了。</p>
<h1 id="Python绘图与GMT对比"><a href="#Python绘图与GMT对比" class="headerlink" title="Python绘图与GMT对比"></a>Python绘图与GMT对比</h1><h1 id="Python-Basemap绘图"><a href="#Python-Basemap绘图" class="headerlink" title="Python-Basemap绘图"></a>Python-Basemap绘图</h1><h2 id="几种主要的投影"><a href="#几种主要的投影" class="headerlink" title="几种主要的投影"></a>几种主要的投影</h2><p>常用的几种投影方式有：<a href="http://matplotlib.org/basemap/users/moll.html" target="_blank" rel="external">moll</a>, <a href="http://matplotlib.org/basemap/users/moll.html" target="_blank" rel="external">hammer</a>, <a href="http://matplotlib.org/basemap/users/robin.html" target="_blank" rel="external">robin</a>, <a href="http://matplotlib.org/basemap/users/eck4.html" target="_blank" rel="external">eck4</a>, <a href="http://matplotlib.org/basemap/users/kav7.html" target="_blank" rel="external">kav7</a>, <a href="http://matplotlib.org/basemap/users/mbtfpq.html" target="_blank" rel="external">mbtfpq</a>, <a href="http://matplotlib.org/basemap/users/cyl.html" target="_blank" rel="external">cyl</a>, <a href="http://matplotlib.org/basemap/users/merc.html" target="_blank" rel="external">merc</a>, <a href="http://matplotlib.org/basemap/users/lcc.html" target="_blank" rel="external">lcc</a>, <a href="http://matplotlib.org/basemap/users/laea.html" target="_blank" rel="external">laea</a>, <a href="http://matplotlib.org/basemap/users/plaea.html" target="_blank" rel="external">nalaea</a></p>
<hr>
<p><img src="http://ocp8aowoj.bkt.clouddn.com/eck4.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/eck4%20%281%29.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/cyl.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/kav7%20%281%29.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/robin.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/mill.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/merc.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/mbtfpq.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/lcc.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/laea.png" alt="投影| center|800x0"><br><img src="http://ocp8aowoj.bkt.clouddn.com/hammer.png" alt="投影| center|800x0"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Python绘图与GMT对比&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;研究地球科学的学者没有不知道GMT的，相信大多数GMT使用者都是为了利用其地图投影，其实还有一些数据处理方面的功能，可能大家用的比较少。GMT在（数据）投影图方面表现确实很好，但是其脚本编写相对于编程语言欠灵活。这里介绍一种Python的库—Matplotlib-&amp;gt;Basemap，其功能之强大较GMT有过之而无不及。介绍Python的好处在于其不仅能精美绘图，而且也可以做各种计算，毕竟是高级编程语言。只要学会用Python，在科研过程中的所有计算和绘图都能得到解决而且是优雅的解决。&lt;/p&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="GMT" scheme="http://yoursite.com/tags/GMT/"/>
    
  </entry>
  
  <entry>
    <title>洋中脊段是由斜向地幔离散造成的</title>
    <link href="http://yoursite.com/2016/08/30/20160731Brandon2016/"/>
    <id>http://yoursite.com/2016/08/30/20160731Brandon2016/</id>
    <published>2016-08-30T06:00:00.000Z</published>
    <updated>2017-03-11T04:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Segmentation of mid-ocean ridges attributed to oblique mantle divergence</strong></p>
<p>作者：<strong>Brandon P. VanderBeek, et al.</strong><br>期刊：<strong><a href="http://www.nature.com/ngeo/journal/v9/n8/full/ngeo2745.html" target="_blank" rel="external">Nature geoscience</a></strong></p>
<hr>
<p><strong>摘要</strong>：洋中脊脊段（segmentation）——构造和岩浆过程系统的沿轴变化——的起源一直存在争议。通常假设地幔流是板块离散的被动响应；转换断层之间的岩浆供应控制洋脊段。利用地震层析成像，我们构建了胡安德富卡脊（Juan de Fuca Ridge）的Endeavour脊段之下地幔流的几何结构和地幔熔融的分布。结合前人研究，我们的结果建立了地幔离散和板块扩张方向之间系统的倾斜角。在所有的三个实例研究中，<strong>地幔离散会由于板块扩张方向的变化而增加，并且流场随扩张速率的减小而增加</strong>。此外，地震成像也反映了大间距、非转换不连续是增强的地幔熔融保留的区域。我们提出：<strong>洋中脊之下的斜的地幔流是扩张脊段的重定向（reorientation）以及脊轴不连续之形成的驱动力</strong>。由此产生的构造不连续则是熔融向上运输的效率降低，因此形成了地幔过程在脊段尺度上的变化（segment-scale variation）。我们预测：<strong>横跨洋中脊的脊段受软流圈流演化模式和岩石圈断裂的动力学模式控制</strong>。<br><img src="http://ocp8aowoj.bkt.clouddn.com/brandon2016-Fig5-2.png" alt="快速和中速扩张脊的岩浆脊段模式"></p>
<a id="more"></a>
<hr>
<blockquote>
<p>自发现地球上洋中脊系统是被洋脊段（segments）分隔开，一些有意义的观测表明构造和岩浆过程存在系统的、沿轴变化。转换断层之间，脊段边界为长寿命的、非转换构造偏移或者二级脊岭不连续(见下图)，常出现于轴部最深处并随板块边界一起迁移。这些二级不连续包括快速和中速扩张脊上重叠的扩张中心（Overlapping spreading centres: OCSs）和慢速扩张洋脊上的斜向剪切带。非转换构造偏移与其相关的脊段尺度的岩浆过程仍是争论热点。</p>
<p>对扩张中心洋脊段的最流行假说，将二级不连续归因于上涌地幔引起的岩浆供应的变化。从此角度出发，脊段中心位于熔融供给增加的位置，岩浆于地壳或地幔深度沿轴向岩浆贫瘠的脊段末端重新分配。而另一个假说则认为板块扩张方向的变化与构造不连续的形成及洋脊下地幔和地壳过程之间的错位有关。在文中，我们利用地震数据对中速扩张的JdFR的Endeavour脊段之下地幔流和先不地幔熔融进行成像。我们综合其他扩张环境的观测结果，确定洋中脊系统的构造和岩浆脊段的响应机制。</p>
</blockquote>
<p><img src="http://ocp8aowoj.bkt.clouddn.com/brandon2016-Fig1-0.png" alt="图1. 快速和中速扩张脊的构造脊段。(a)EPR的水深图；(b)JaFR的Endeavour区域的水深；(c)MAR的水深；符号缩写：虚线表示板块边界。转换断层(TF)，重合扩张中心(OCS)和非转换偏移(NTO)。数字表示构造不连续的级数。白色箭头表示扩张方向和全扩张速率。绿色箭头表示地震各向异性方向。图中也表明了洋脊系统的欧拉极旋转方向。(d)研究区域的全球分布图"></p>
<h2 id="实验几何和层析成像"><a href="#实验几何和层析成像" class="headerlink" title="实验几何和层析成像"></a>实验几何和层析成像</h2><blockquote>
<p>图2表明了用于构建JdFR Endeavour脊段之下浅部地幔的层析成像模型的地震震源和接收的分布。我们使用Moho不连续面的反射波到时（Pn到时）对地幔之上4km、沿轴和过轴分别为100km和20km区域进行成像。构建了地壳速度和厚度的三维初始模型。</p>
</blockquote>
<h2 id="Endeavour的地幔流和熔融分布"><a href="#Endeavour的地幔流和熔融分布" class="headerlink" title="Endeavour的地幔流和熔融分布"></a>Endeavour的地幔流和熔融分布</h2><p>我们的模型的各项异性分量约束了上地幔流在脊段尺度下的几何模型。因为地幔中地震的各项异性主要由橄榄石晶体的晶格优选方向决定。</p>
<h2 id="洋中脊的构造洋脊段"><a href="#洋中脊的构造洋脊段" class="headerlink" title="洋中脊的构造洋脊段"></a>洋中脊的构造洋脊段</h2><h2 id="洋中脊的岩浆洋脊段"><a href="#洋中脊的岩浆洋脊段" class="headerlink" title="洋中脊的岩浆洋脊段"></a>洋中脊的岩浆洋脊段</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Segmentation of mid-ocean ridges attributed to oblique mantle divergence&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;strong&gt;Brandon P. VanderBeek, et al.&lt;/strong&gt;&lt;br&gt;期刊：&lt;strong&gt;&lt;a href=&quot;http://www.nature.com/ngeo/journal/v9/n8/full/ngeo2745.html&quot;&gt;Nature geoscience&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;：洋中脊脊段（segmentation）——构造和岩浆过程系统的沿轴变化——的起源一直存在争议。通常假设地幔流是板块离散的被动响应；转换断层之间的岩浆供应控制洋脊段。利用地震层析成像，我们构建了胡安德富卡脊（Juan de Fuca Ridge）的Endeavour脊段之下地幔流的几何结构和地幔熔融的分布。结合前人研究，我们的结果建立了地幔离散和板块扩张方向之间系统的倾斜角。在所有的三个实例研究中，&lt;strong&gt;地幔离散会由于板块扩张方向的变化而增加，并且流场随扩张速率的减小而增加&lt;/strong&gt;。此外，地震成像也反映了大间距、非转换不连续是增强的地幔熔融保留的区域。我们提出：&lt;strong&gt;洋中脊之下的斜的地幔流是扩张脊段的重定向（reorientation）以及脊轴不连续之形成的驱动力&lt;/strong&gt;。由此产生的构造不连续则是熔融向上运输的效率降低，因此形成了地幔过程在脊段尺度上的变化（segment-scale variation）。我们预测：&lt;strong&gt;横跨洋中脊的脊段受软流圈流演化模式和岩石圈断裂的动力学模式控制&lt;/strong&gt;。&lt;br&gt;&lt;img src=&quot;http://ocp8aowoj.bkt.clouddn.com/brandon2016-Fig5-2.png&quot; alt=&quot;快速和中速扩张脊的岩浆脊段模式&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="学术前沿" scheme="http://yoursite.com/categories/%E5%AD%A6%E6%9C%AF%E5%89%8D%E6%B2%BF/"/>
    
    
      <category term="地球动力学" scheme="http://yoursite.com/tags/%E5%9C%B0%E7%90%83%E5%8A%A8%E5%8A%9B%E5%AD%A6/"/>
    
      <category term="洋中脊" scheme="http://yoursite.com/tags/%E6%B4%8B%E4%B8%AD%E8%84%8A/"/>
    
  </entry>
  
  <entry>
    <title>土卫2上的热泉</title>
    <link href="http://yoursite.com/2016/08/30/20160731EnceladusHotSpring/"/>
    <id>http://yoursite.com/2016/08/30/20160731EnceladusHotSpring/</id>
    <published>2016-08-30T01:29:00.000Z</published>
    <updated>2017-03-11T04:48:11.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Enceladus’ hot springs</strong></p>
<p>作者：<strong>Gabriel Tobie: is at the Laboratoire de Planétologie et Géodynamique, Université de Nantes</strong><br>期刊：<strong><a href="http://www.nature.com/nature/journal/v519/n7542/full/519162a.html" target="_blank" rel="external">Nature</a></strong></p>
<hr>
<p><strong>摘要</strong>：在太阳系形成早期阶段，很多星体都有热液活动发生——水、岩相互作用——结果形成热液循环系统，但是目前了解到地球是仅有的还保持活动的。在2005年，卡西尼（Cassini）探测器发现了土卫2（Enceladus）存在水蒸气和冰的喷发，来自于南极温暖的、长的断裂。对Enceladus喷发羽流的盐度和冰粒的探测很清晰的反应了冰壳下存在海洋环境和被热水浸析的岩石，至少在过去是这样的。本期207页，<a href="http://www.nature.com/nature/journal/v519/n7542/full/nature14262.html" target="_blank" rel="external">Hsu</a>报道了土卫2上存在热液活动过程。<br><img src="http://ocp8aowoj.bkt.clouddn.com/Saturns-Moon-Enceladus.jpg" alt="土卫2热液喷发 | center|800x0"> </p>
<a id="more"></a>
<hr>
<p>此事始于十年前，卡西尼是探测微尘埃粒子（称为粒子束）的航天器之一，用于探测土星。粒子束从土星逃逸到太阳系。经分析发现，这些粒子束大都是纳米级大小并富含硅（silicon），与土星环境富含冰的环境形成了对比。这些例子的起源尚不明确。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Enceladus’ hot springs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;strong&gt;Gabriel Tobie: is at the Laboratoire de Planétologie et Géodynamique, Université de Nantes&lt;/strong&gt;&lt;br&gt;期刊：&lt;strong&gt;&lt;a href=&quot;http://www.nature.com/nature/journal/v519/n7542/full/519162a.html&quot;&gt;Nature&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;：在太阳系形成早期阶段，很多星体都有热液活动发生——水、岩相互作用——结果形成热液循环系统，但是目前了解到地球是仅有的还保持活动的。在2005年，卡西尼（Cassini）探测器发现了土卫2（Enceladus）存在水蒸气和冰的喷发，来自于南极温暖的、长的断裂。对Enceladus喷发羽流的盐度和冰粒的探测很清晰的反应了冰壳下存在海洋环境和被热水浸析的岩石，至少在过去是这样的。本期207页，&lt;a href=&quot;http://www.nature.com/nature/journal/v519/n7542/full/nature14262.html&quot;&gt;Hsu&lt;/a&gt;报道了土卫2上存在热液活动过程。&lt;br&gt;&lt;img src=&quot;http://ocp8aowoj.bkt.clouddn.com/Saturns-Moon-Enceladus.jpg&quot; alt=&quot;土卫2热液喷发 | center|800x0&quot;&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="学术前沿" scheme="http://yoursite.com/categories/%E5%AD%A6%E6%9C%AF%E5%89%8D%E6%B2%BF/"/>
    
    
      <category term="热液" scheme="http://yoursite.com/tags/%E7%83%AD%E6%B6%B2/"/>
    
  </entry>
  
  <entry>
    <title>Python数据分析</title>
    <link href="http://yoursite.com/2016/08/03/SCI_Python/"/>
    <id>http://yoursite.com/2016/08/03/SCI_Python/</id>
    <published>2016-08-03T01:29:00.000Z</published>
    <updated>2017-03-11T04:49:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>Matlab数据处理方便，但是作图实在是无力吐槽；C/C++，还有Fortran写大型的数据分析程序或高性计算还不错，但是可是化功能几乎没有。有了<strong>Python</strong>，两者兼备，既有丰富的数据处理函数库（比如numpy,scipy等，既有fft方面的也有小波方面的），也有精美的绘图函数库（如matplotlib），如果不进行大型的高性（并行）计算，强烈推荐科研过程中引入<strong>Python</strong>，如虎添翼。</p>
<a id="more"></a>
<p>从我个人的使用经历中一点一点积累经验，分享给大家，会实时更新，本文主要分享的是Python在数据处理（分析）中如何运用。</p>
<h1 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h1><p>Python自定义函数很简单，只需要<code>def _funcname(par1,par2):</code>这种形式即可，注意这里的<code>:</code>，因为<strong>Python</strong>是一门非常讲究代码格式的语言，强制你写代码必须优雅，否则会出错，直接上代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#定义</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_add</span><span class="params">(x,y)</span>:</span></div><div class="line">	z=x+y</div><div class="line">	<span class="keyword">return</span> z</div><div class="line"><span class="comment">#调用</span></div><div class="line">x=<span class="number">1</span></div><div class="line">y=<span class="number">2</span></div><div class="line">z=_add(x,y)</div></pre></td></tr></table></figure></p>
<p>Python自定义函数返回值支持返回多个参数，包括列表，字典等，比如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#定义</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func</span><span class="params">(x,y,z)</span>:</span></div><div class="line">	<span class="keyword">return</span> x,y,z</div><div class="line"><span class="comment">#调用</span></div><div class="line">x=<span class="number">1</span></div><div class="line">y=<span class="number">2</span></div><div class="line">z=<span class="number">3</span></div><div class="line">x0,y0,z0=_func(x,y,z)</div></pre></td></tr></table></figure></p>
<h1 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h1><p>通常我们处理的数据分为二维数据和三维数据，二维数据也就是通常所说的剖面数据，一般存储形式为n列的文本文件，比如我要读取一条水深剖面数据，其存储格式为：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="number">0</span>	<span class="number">-2696.041808</span>	</div><div class="line"><span class="number">500</span>	<span class="number">-2698.925123</span>	</div><div class="line"><span class="number">1000</span>	<span class="number">-2702.703325</span>	</div><div class="line"><span class="number">1500</span>	<span class="number">-2707.372416</span>	</div><div class="line"><span class="number">2000</span>	<span class="number">-2712.638406</span>	</div><div class="line"><span class="number">2500</span>	<span class="number">-2719.304509</span>	</div><div class="line"><span class="number">3000</span>	<span class="number">-2726.121160</span>	</div><div class="line"><span class="number">3500</span>	<span class="number">-2734.344562</span>	</div><div class="line">......		......</div></pre></td></tr></table></figure></p>
<p>第一列是距离，第二列是水深。读取文件我喜欢用<code>linecache</code>，这个包支持大文件读取，速度非常快，也不折腾别的了，反正现在计算机资源很多，不追求性能更优的话暂且就用这个吧。自定义一个读取文件返回数据数组的函数：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> linecache</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"><span class="comment">#读取剖面数据</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_ReadData2d</span><span class="params">(filename,col_x,col_y)</span>:</span></div><div class="line">	AllData = linecache.getlines(filename)</div><div class="line">	x=np.linspace(<span class="number">0</span>,<span class="number">1.0</span>,len(AllData))</div><div class="line">	y=np.linspace(<span class="number">0</span>,<span class="number">1.0</span>,len(AllData))</div><div class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(AllData)):</div><div class="line">		LineData=AllData[i]</div><div class="line">		x[i]=(float(LineData.split()[col_x]))</div><div class="line">		y[i]=(float(LineData.split()[col_y]))</div><div class="line">	<span class="comment"># 清除缓存,关闭文件</span></div><div class="line">	linecache .clearcache()</div><div class="line"><span class="comment">#调用</span></div><div class="line">filename_topo=<span class="string">"profile1_etopo1_500.dat"</span></div><div class="line">x,y=_ReadData2d(filename_topo,<span class="number">0</span>,<span class="number">1</span>)</div><div class="line"><span class="keyword">print</span> x,y</div></pre></td></tr></table></figure></p>
<h1 id="求频谱"><a href="#求频谱" class="headerlink" title="求频谱"></a>求频谱</h1><p>首先根据读取的数据计算频率范围，也就是$f$向量，只需要自变量$x$两个量即可：采样间隔；采样个数（数据点个数），直接上代码：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#定义</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_GetFrequency</span><span class="params">(xmin,xmax,datasize)</span>:</span></div><div class="line">	frequency=np.arange(<span class="number">0</span>,datasize/<span class="number">2.0</span>+<span class="number">1</span>,<span class="number">1.0</span>)/(xmax-xmin)</div><div class="line">	frequency2=np.arange(datasize/<span class="number">2.0</span>,<span class="number">1</span>,<span class="number">-1.0</span>)/(xmax-xmin)</div><div class="line">	frequencytotal=np.hstack((frequency,frequency2))</div><div class="line">	<span class="keyword">return</span> frequency,frequencytotal	</div><div class="line"><span class="comment">#调用</span></div><div class="line">f,ftotal=_GetFrequency(xmin,xmax,datasize)</div><div class="line"><span class="comment">#rfft函数的返回值是N/2+1个复数，分别表示从0(Hz)到sampling_rate/2(Hz)的N/2+1点频率的成分，与f大小一致</span></div><div class="line">F_topo=np.fft.rfft(topo)/datasize</div><div class="line"><span class="string">"""</span></div><div class="line">   最后我们计算每个频率分量的幅值，</div><div class="line">   并通过 20*np.log10() 将其转换为以db单位的值。</div><div class="line">   为了防止0幅值的成分造成log10无法计算，</div><div class="line">   我们调用np.clip对xf的幅值进行上下限处理：</div><div class="line">"""</div><div class="line">spectrum=<span class="number">20</span>*np.log10(np.clip(np.abs(F_topo), <span class="number">1e-20</span>, <span class="number">1e100</span>))</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Matlab数据处理方便，但是作图实在是无力吐槽；C/C++，还有Fortran写大型的数据分析程序或高性计算还不错，但是可是化功能几乎没有。有了&lt;strong&gt;Python&lt;/strong&gt;，两者兼备，既有丰富的数据处理函数库（比如numpy,scipy等，既有fft方面的也有小波方面的），也有精美的绘图函数库（如matplotlib），如果不进行大型的高性（并行）计算，强烈推荐科研过程中引入&lt;strong&gt;Python&lt;/strong&gt;，如虎添翼。&lt;/p&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="数据分析" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
      <category term="优美作图" scheme="http://yoursite.com/tags/%E4%BC%98%E7%BE%8E%E4%BD%9C%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Python精美作图</title>
    <link href="http://yoursite.com/2016/08/03/figure_python/"/>
    <id>http://yoursite.com/2016/08/03/figure_python/</id>
    <published>2016-08-03T01:29:00.000Z</published>
    <updated>2017-03-11T05:05:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>Python是写SCI论文不可多得的绘图好帮手，其绘图功能以及导出的矢量图之美观会让你欲罢不能，而且Python的<a href="http://matplotlib.org/gallery.html" target="_blank" rel="external">matplotlib</a>绘图模块也有非常完善的说明文档和例子。</p>
<a id="more"></a>
<h1 id="曲线图"><a href="#曲线图" class="headerlink" title="曲线图"></a>曲线图</h1><p>首先需要在导言区导入<code>matplotlib</code>库：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div></pre></td></tr></table></figure></p>
<p>其语法与Matlab的绘图命令非常相似，可以直接使用上面导入的<code>plt</code>进行绘图，比如:<code>plt.plot(x,y)</code>，单个曲线图太简单，不再赘述。下面介绍几种常用的绘图布局方法。</p>
<h2 id="并列图"><a href="#并列图" class="headerlink" title="并列图"></a>并列图</h2><p>有时候为了对比数据，需要将两个或几个曲线进行上下并排，也就是绘制子图。直接读代码比较好：</p>
<ul>
<li>并列类型1：<strong>两行一列</strong><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fig, (ax0, ax1) = plt.subplots(<span class="number">2</span>, <span class="number">1</span>, sharex=<span class="keyword">True</span>,figsize=(<span class="number">9</span>,<span class="number">7</span>))</div></pre></td></tr></table></figure>
</li>
</ul>
<p>上面这是一个两行一列的并列图，分别使用<code>ax0</code>和<code>ax1</code>进行绘图</p>
<ul>
<li>并列类型2：<strong>第一行一个第二行三个</strong><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">fig=plt.figure(figsize=(<span class="number">14</span>,<span class="number">10</span>))</div><div class="line">ax0=fig.add_subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>)</div><div class="line">ax1=fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</div><div class="line">ax2=fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>)</div><div class="line">ax3=fig.add_subplot(<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="共用坐标轴"><a href="#共用坐标轴" class="headerlink" title="共用坐标轴"></a>共用坐标轴</h2><p>有时候需要在同一张图上呈现几个数据，比如同时显示一条测线上的重力异常和水深，这就需要公用x轴；还有一种情况需要公用y轴：显示频谱的时候再其中一条横轴上显示波数（或频谱），在另一条横轴上显示波长，方便读图。</p>
<h3 id="共用x轴"><a href="#共用x轴" class="headerlink" title="共用x轴"></a>共用x轴</h3><p>需要用一个方法<code>twinx</code>将坐标轴分开两部分即可：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#绘图</span></div><div class="line">fig, (ax0, ax1) = plt.subplots(<span class="number">2</span>, <span class="number">1</span>, sharex=<span class="keyword">True</span>,figsize=(<span class="number">9</span>,<span class="number">7</span>))</div><div class="line"><span class="comment"># ax0.plot(ftotal,np.log10(np.clip(np.abs(Z_k), 1e-20, 1e100)))</span></div><div class="line">p1,=ax0.plot(x/<span class="number">1000.0</span>,topo/<span class="number">1000.0</span>)</div><div class="line">ax0.set_ylabel(<span class="string">'km'</span>)</div><div class="line">ax0.set_ylim(topo.min()/<span class="number">1000.0</span>,<span class="number">0</span>)</div><div class="line">part2=ax0.twinx()</div><div class="line">p2,=part2.plot(x/<span class="number">1000.0</span>,grav,<span class="string">'r'</span>)</div><div class="line">part2.set_ylabel(<span class="string">'mGal'</span>)</div><div class="line">part2.set_ylim(grav.min()*<span class="number">1.5</span>,grav.max())</div><div class="line">part2.yaxis.label.set_color(p2.get_color())</div><div class="line">tkw = dict(size=<span class="number">4</span>, width=<span class="number">1.5</span>)</div><div class="line">part2.tick_params(axis=<span class="string">'y'</span>, colors=p2.get_color(), **tkw)</div></pre></td></tr></table></figure></p>
<blockquote>
<p>特别注意<code>p1</code>, <code>p2</code>后面的那个逗号，不能掉。</p>
</blockquote>
<h3 id="共用y轴"><a href="#共用y轴" class="headerlink" title="共用y轴"></a>共用y轴</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#设置另一个x轴</span></div><div class="line">xaxis_wavelength=plt.twiny()</div><div class="line">xaxis_wavelength.set_xlabel(<span class="string">u"波长(km)"</span>,fontdict=&#123;<span class="string">"family"</span>: <span class="string">"STKaiti"</span>&#125;)</div><div class="line">xaxis_wavelength.set_xlim(k[<span class="number">0</span>],k[len(k)<span class="number">-1</span>])</div><div class="line">labels=[<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">1000</span>]</div><div class="line">labels_x=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(labels)):</div><div class="line">	labels_x.append(np.pi*<span class="number">2.0</span>/labels[i])</div><div class="line">plt.xticks(labels_x,labels)</div></pre></td></tr></table></figure>
<blockquote>
<p>刻度上的label需要自己设定，根据另一个轴的值计算出来标上，用到了函数：<code>xticks</code></p>
</blockquote>
<h2 id="去掉制定坐标轴"><a href="#去掉制定坐标轴" class="headerlink" title="去掉制定坐标轴"></a>去掉制定坐标轴</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ax1.xaxis.set_ticks_position(<span class="string">'bottom'</span>)</div><div class="line">ax1.yaxis.set_ticks_position(<span class="string">'left'</span>)</div><div class="line">ax1.spines[<span class="string">'top'</span>].set_visible(<span class="keyword">False</span>)</div><div class="line">ax1.spines[<span class="string">'right'</span>].set_visible(<span class="keyword">False</span>)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python是写SCI论文不可多得的绘图好帮手，其绘图功能以及导出的矢量图之美观会让你欲罢不能，而且Python的&lt;a href=&quot;http://matplotlib.org/gallery.html&quot;&gt;matplotlib&lt;/a&gt;绘图模块也有非常完善的说明文档和例子。&lt;/p&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
      <category term="优美作图" scheme="http://yoursite.com/tags/%E4%BC%98%E7%BE%8E%E4%BD%9C%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>气候驱动的海水深度变化对洋中脊岩浆供应波动的敏感度</title>
    <link href="http://yoursite.com/2016/07/30/20160731/"/>
    <id>http://yoursite.com/2016/07/30/20160731/</id>
    <published>2016-07-30T14:10:00.000Z</published>
    <updated>2017-03-11T04:48:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Sensitivity of seafloor bathymetry to climate-driven fluctuations in mid-ocean ridge magma supply</strong></p>
<p>作者：<strong>J.-A. Olive, et. al.</strong><br>期刊：<strong><a href="http://science.sciencemag.org/content/350/6258/310.short" target="_blank" rel="external">Science</a></strong></p>
<hr>
<p><strong>摘要</strong>：最近有研究表明，在洋中脊形成的海底地形（纹理）特征记录了由海平面变化引起的洋脊岩浆供应的快速（23 ky. ~ 100 ky.）波动，因为海平面变化会对洋底之下的地幔熔融产物有一定调节作用。我们利用断裂和岩浆侵位的定量模型证明了：实际上，海底形态的形成过程对于岩浆供应变化，周期小于100 ky. 的强阻尼波动起到了低通滤波作用。我们的研究结果表明，</p>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Sensitivity of seafloor bathymetry to climate-driven fluctuations in mid-ocean ridge magma supply&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;作者：&lt;strong&gt;J.-A. Olive, et. al.&lt;/strong&gt;&lt;br&gt;期刊：&lt;strong&gt;&lt;a href=&quot;http://science.sciencemag.org/content/350/6258/310.short&quot;&gt;Science&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;摘要&lt;/strong&gt;：最近有研究表明，在洋中脊形成的海底地形（纹理）特征记录了由海平面变化引起的洋脊岩浆供应的快速（23 ky. ~ 100 ky.）波动，因为海平面变化会对洋底之下的地幔熔融产物有一定调节作用。我们利用断裂和岩浆侵位的定量模型证明了：实际上，海底形态的形成过程对于岩浆供应变化，周期小于100 ky. 的强阻尼波动起到了低通滤波作用。我们的研究结果表明，&lt;/p&gt;
    
    </summary>
    
      <category term="学术前沿" scheme="http://yoursite.com/categories/%E5%AD%A6%E6%9C%AF%E5%89%8D%E6%B2%BF/"/>
    
    
      <category term="地球物理" scheme="http://yoursite.com/tags/%E5%9C%B0%E7%90%83%E7%89%A9%E7%90%86/"/>
    
      <category term="地球动力学" scheme="http://yoursite.com/tags/%E5%9C%B0%E7%90%83%E5%8A%A8%E5%8A%9B%E5%AD%A6/"/>
    
      <category term="洋中脊" scheme="http://yoursite.com/tags/%E6%B4%8B%E4%B8%AD%E8%84%8A/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3使用技巧之（二：常用插件）</title>
    <link href="http://yoursite.com/2016/07/29/new-blog/"/>
    <id>http://yoursite.com/2016/07/29/new-blog/</id>
    <published>2016-07-29T13:06:00.000Z</published>
    <updated>2017-03-11T04:49:14.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>无插件不神器：陆续添加我喜欢的插件说明。安装插件前期了解参见：<strong>[Sublime Text 3使用技巧之（一：预热）]</strong></p>
</blockquote>
<a id="more"></a>
<h2 id="Python环境配置"><a href="#Python环境配置" class="headerlink" title="Python环境配置"></a>Python环境配置</h2><ul>
<li>安装<strong>SublimeREPL</strong>插件<blockquote>
<p>在package control中输入<code>SublimeREPL</code>安装，安装完成后会显示在菜单中<strong>Tools</strong>→<strong>SublimeREPL</strong>→<strong>Python</strong>，就会将python IDE集成在<strong>ST</strong>中</p>
<h3 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h3><p>快捷键的作用就是代替每次打开Python用鼠标点击菜单的痛苦。<br>打开Preferences-&gt;Key Bindings-User，复制代码：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[&#123;<span class="string">"keys"</span>:[<span class="string">"f1"</span>],</div><div class="line"><span class="string">"caption"</span>: <span class="string">"SublimeREPL: Python - RUN current file"</span>,</div><div class="line"><span class="string">"command"</span>: <span class="string">"run_existing_window_command"</span>, <span class="string">"args"</span>:</div><div class="line">&#123;<span class="string">"id"</span>: <span class="string">"repl_python_run"</span>,<span class="string">"file"</span>: <span class="string">"config/Python/Main.sublime-menu"</span>&#125;</div><div class="line">&#125;]</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h3 id="运行Python脚本"><a href="#运行Python脚本" class="headerlink" title="运行Python脚本"></a>运行Python脚本</h3><p>新建或者打开.py文件，然后直接使用键盘组合：<code>Ctrl + B</code>运行Python代码。</p>
<hr>
<h2 id="运行bat文件（cmd命令）"><a href="#运行bat文件（cmd命令）" class="headerlink" title="运行bat文件（cmd命令）"></a>运行bat文件（cmd命令）</h2><p><strong>Tools</strong> -&gt; <strong>Build System</strong> -&gt; <strong>New Build System…</strong>，在打开的文件中输入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">	<span class="string">"cmd"</span>: <span class="string">"<span class="variable">$file</span>"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>然后保存为<strong>cmd.sublime-build</strong>即可，这是<strong>Tools</strong> -&gt; <strong>Build System</strong>菜单中会出现一个<strong>cmd</strong>。打开一个bat文件然后利用组合键：<code>Ctrl + B</code>运行，或许运行前需要选择<strong>Build System</strong>为<strong>cmd</strong></p>
<hr>
<h2 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h2><h2 id="Markdown环境配置"><a href="#Markdown环境配置" class="headerlink" title="Markdown环境配置"></a>Markdown环境配置</h2><blockquote>
<p>所需插件：<strong><a href="https://github.com/SublimeText-Markdown/MarkdownEditing" target="_blank" rel="external">MarkdownEditing</a></strong>, <strong><a href="https://github.com/revolunet/sublimetext-markdown-preview" target="_blank" rel="external">MarkdownPreview</a></strong>, <strong><a href="https://github.com/jonschlinkert/sublime-monokai-extended" target="_blank" rel="external">Monokai Extened</a></strong>, <strong><a href="http://theo.im/OmniMarkupPreviewer/" target="_blank" rel="external">OmniMarkupPreviwer</a></strong>, <strong><a href="https://github.com/vkocubinsky/SublimeTableEditor" target="_blank" rel="external">TableEditor</a></strong></p>
</blockquote>
<h3 id="MarkdownEditing"><a href="#MarkdownEditing" class="headerlink" title="MarkdownEditing"></a>MarkdownEditing</h3><p>支持Markdown语法高亮；支持Github Favored Markdown语法，其实没啥用，并不好看。<strong>可以不安装</strong></p>
<h3 id="MarkdownPreview"><a href="#MarkdownPreview" class="headerlink" title="MarkdownPreview"></a>MarkdownPreview</h3><p>按<code>Ctrl + B</code>生成网页HTML，在前面添加<code>[TOC]</code>可以自动生成目录，但是这种方法会在被预览的<code>.md</code>文件所在目录下生成<code>.html</code>文件，这并不是我们想要的，在用hexo推送博客的时候会增大<code>_posts</code>目录体重，<strong>可以不安装</strong></p>
<h3 id="Monokai-Extened"><a href="#Monokai-Extened" class="headerlink" title="Monokai Extened"></a>Monokai Extened</h3><p>这是一个很不错的插件，是Monokai主题的扩展，不仅支持Markdown同时也不会改变其他语言的Monokai主题样式。本人很喜欢Monokai主题。</p>
<h3 id="OmniMarkupPreviwer"><a href="#OmniMarkupPreviwer" class="headerlink" title="OmniMarkupPreviwer"></a>OmniMarkupPreviwer</h3><p>此插件是本人推荐使用的，可以在浏览器中实时预览Markdown，因为我一般使用三屏工作，体验还不错。在<strong><a href="http://gmt.soest.hawaii.edu/" target="_blank" rel="external">gmt</a></strong>和<strong><a href="http://matplotlib.org/" target="_blank" rel="external">python</a></strong>做图的时候我也是用这种一边写代码一遍开着<strong><a href="http://www.sumatrapdfreader.org/free-pdf-reader.html" target="_blank" rel="external">SumatraPdf</a></strong>进行pdf预览。<br>快捷键：<code>Ctrl + Alt + O</code></p>
<ul>
<li>支持Latex公式<blockquote>
<p>在OmniMarkupPreviewer的设置中(<code>C:\Users\zhiku\AppData\Roaming\Sublime Text 3\Packages\OmniMarkupPreviewer\OmniMarkupPreviewer.sublime-settings</code>)将mathjax_enabled设置为:<code>True</code>，之后MathJax会在后端自动下载；如果下载网速比较慢，可以手动<a href="https://github.com/downloads/timonwong/OmniMarkupPreviewer/mathjax.zip" target="_blank" rel="external">下载</a>，然后解压到：<code>C:\Users\zhiku\AppData\Roaming\Sublime Text 3\Packages\OmniMarkupPreviewer\public</code>，之后在<code>C:\Users\zhiku\AppData\Roaming\Sublime Text 3\Packages\OmniMarkupPreviewer</code>中创建一个空的文件：<code>MATHJAX.DOWNLOADED</code>即可。更多设置可参考<a href="http://blog.leanote.com/post/54bfa17b8404f03097000000" target="_blank" rel="external">MacPlay</a>博文。</p>
</blockquote>
</li>
</ul>
<h3 id="TableEditor"><a href="#TableEditor" class="headerlink" title="TableEditor"></a>TableEditor</h3><p>这个插件也是推荐的，因为Markdown写表格确实有点无奈，这个插件可以有一定帮助，用<code>Tab</code>键可以自动完成对齐。使用之前，需要使用<code>Ctrl + shift + P</code>打开功能：<strong>Table Editor: Enable for current syntax or Table Editor: Enable for current view or “Table Editor: Set table syntax … for current view”</strong>。</p>
<h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><ul>
<li>卸载插件：<code>Ctrl + Shift + P</code>-&gt;<code>remove</code>-&gt;输入需要卸载的插件名</li>
<li>插件安装路径：<code>C:\Users\zhiku\AppData\Roaming\Sublime Text 3\Packages</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;无插件不神器：陆续添加我喜欢的插件说明。安装插件前期了解参见：&lt;strong&gt;[Sublime Text 3使用技巧之（一：预热）]&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="SublimeText" scheme="http://yoursite.com/tags/SublimeText/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅的整理笔记</title>
    <link href="http://yoursite.com/2016/07/29/secondTest/"/>
    <id>http://yoursite.com/2016/07/29/secondTest/</id>
    <published>2016-07-29T13:06:00.000Z</published>
    <updated>2017-03-11T04:49:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>优雅的版面，支持云同步，支持Latex，支持代码高亮等满足这一系列要求，但又不想折腾个人博客搭载，所以选择了<strong><a href="https://www.yinxiang.com/" target="_blank" rel="external">Evernote</a></strong>配合<strong><a href="https://maxiang.io/" target="_blank" rel="external">马克飞象</a></strong>写笔记。方便自己回忆，也方便分享、讨论，得益于<strong><a href="https://seisman.info/" target="_blank" rel="external">Seisman</a></strong>的博客，以后有机会也会给自己搭建一个个人博客把整理的笔记都挂上去。 </p>
</blockquote>
<a id="more"></a>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote>
<p>Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— <a href="https://zh.wikipedia.org/wiki/Markdown" target="_blank" rel="external">维基百科</a></p>
</blockquote>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。    —— [<span class="string">维基百科</span>](<span class="link">https://zh.wikipedia.org/wiki/Markdown</span>)</div></pre></td></tr></table></figure>
<h2 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="$\LaTeX{}$ 公式"></a>$\LaTeX{}$ 公式</h2><p>行内公式$y=x^2$，块级公式：<br>$$<br>\vartriangle g(k) = 2\pi G(\rho_c-\rho_w)e^{-kd}\sum_{n=1}^\infty \dfrac{k^{n-1}}{n!}\Im{h^n(x)}<br>$$</p>
<h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h3><p>使用两个<code>$$</code>将$\LaTeX$公式代码括起来即可，行内公式使用一个<code>$</code><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$$\vartriangle g(k) = 2\pi G(\rho<span class="emphasis">_c-\rho w) e^&#123;-kd&#125; \sum_</span>&#123;n=1&#125;^&#123;\infty&#125; \dfrac&#123;k^&#123;n-1&#125;&#125;&#123;n!&#125;\Im\&#123;h^n(x)\&#125;$$</div></pre></td></tr></table></figure></p>
<h2 id="图片-标题"><a href="#图片-标题" class="headerlink" title="图片+标题"></a>图片+标题</h2><p><img src="/uploads/PrattModel.png" alt="Pratt模型 | center|600x0"></p>
<h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="string">"""</span></div><div class="line">--------简单挠曲模型重力异常导纳曲线：P181，fig5.7，eq5.13</div><div class="line">--------郭志馗，2016/7/19，杭州</div><div class="line">--------参考文献：A. B. Watts，2001</div><div class="line">--------------------修改说明------------------------------------</div><div class="line">1. 量纲：s^-2=10^8 mGal km^-1</div><div class="line">----------------------------------------------------------------</div><div class="line"></div><div class="line">"""</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> fontManager</div><div class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</div><div class="line"><span class="keyword">from</span> os <span class="keyword">import</span> path</div><div class="line"><span class="keyword">from</span> matplotlib.ticker <span class="keyword">import</span>  MultipleLocator</div><div class="line"><span class="keyword">from</span> matplotlib.ticker <span class="keyword">import</span>  FormatStrFormatter</div><div class="line"></div><div class="line"><span class="comment">#配置字典设置</span></div><div class="line"><span class="comment">#	print path.abspath(matplotlib.matplotlib_fname())	#当前使用的配置文件</span></div><div class="line">matplotlib.rcParams[<span class="string">"figure.autolayout"</span>]=<span class="string">"TRUE"</span>	<span class="comment">#图片边距</span></div><div class="line">matplotlib.rcParams[<span class="string">"font.family"</span>]=<span class="string">"Times New Roman"</span></div><div class="line">matplotlib.rcParams[<span class="string">"text.color"</span>]=<span class="string">"black"</span></div><div class="line">matplotlib.rcParams[<span class="string">"axes.linewidth"</span>]=<span class="string">"2"</span>				<span class="comment">#坐标轴线宽</span></div><div class="line">matplotlib.rcParams[<span class="string">"font.size"</span>]=<span class="string">"16"</span></div><div class="line">matplotlib.rcParams[<span class="string">"xtick.major.size"</span>]=<span class="number">10</span>				<span class="comment">#xtick设置</span></div><div class="line">matplotlib.rcParams[<span class="string">"xtick.minor.size"</span>]=<span class="number">5</span></div><div class="line">matplotlib.rcParams[<span class="string">"xtick.major.width"</span>]=<span class="number">2</span></div><div class="line">matplotlib.rcParams[<span class="string">"xtick.minor.width"</span>]=<span class="number">1</span></div><div class="line">matplotlib.rcParams[<span class="string">"ytick.major.size"</span>]=<span class="number">10</span>				<span class="comment">#ytick设置</span></div><div class="line">matplotlib.rcParams[<span class="string">"ytick.minor.size"</span>]=<span class="number">5</span></div><div class="line">matplotlib.rcParams[<span class="string">"ytick.major.width"</span>]=<span class="number">2</span></div><div class="line">matplotlib.rcParams[<span class="string">"ytick.minor.width"</span>]=<span class="number">1</span></div><div class="line">matplotlib.rcParams[<span class="string">"lines.linewidth"</span>]=<span class="number">3</span>				<span class="comment">#设置线条</span></div><div class="line">matplotlib.rcParams[<span class="string">"mathtext.default"</span>]=<span class="string">"regular"</span>		<span class="comment">#公式字体:tt, it, rm, cal, sf, bf or default/regular (non-math)</span></div><div class="line"><span class="comment">#------------------------下面正式绘图----------------------------</span></div><div class="line"><span class="comment">#参数</span></div><div class="line">G=<span class="number">6.67</span>*<span class="number">10</span>**<span class="number">-11</span>			<span class="comment">#m3 kg-1 s-2</span></div><div class="line">den_c=<span class="number">2800</span>				<span class="comment">#kg/m3</span></div><div class="line">den_2=<span class="number">2800</span></div><div class="line">den_3=<span class="number">2800</span></div><div class="line">den_m=<span class="number">3350</span></div><div class="line">den_w=<span class="number">1030</span>				<span class="comment">#kg/m3	</span></div><div class="line">d=<span class="number">4.500</span>					<span class="comment">#km</span></div><div class="line">t=<span class="number">7.1</span></div><div class="line">Te=<span class="number">5</span>					<span class="comment">#km</span></div><div class="line">E=<span class="number">10</span>**<span class="number">11</span>				<span class="comment">#N m^-2</span></div><div class="line">v=<span class="number">0.25</span></div><div class="line">g=<span class="number">9.8</span>					<span class="comment">#m s^-2</span></div><div class="line"><span class="comment">#函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func_Zk</span><span class="params">(den_c,d,k,t)</span>:</span>								<span class="comment">#非均衡地形的重力异常导纳</span></div><div class="line">	Zk=<span class="number">2</span>*np.pi*G*(den_c-den_w)*np.exp(-k*d)*<span class="number">10</span>**<span class="number">8</span></div><div class="line">	<span class="keyword">return</span> Zk</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func_ZK_Airy</span><span class="params">(t,k,d)</span>:</span>									<span class="comment">#Airy模型的重力异常导纳</span></div><div class="line">	Zk=<span class="number">2</span>*np.pi*G*(den_c-den_w)*np.exp(-k*d)*(<span class="number">1</span>-np.exp(-k*t))*<span class="number">10</span>**<span class="number">8</span></div><div class="line">	<span class="keyword">return</span> Zk</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func_ZK_Airy_hidden</span><span class="params">(t,k,d,den_2)</span>:</span>									<span class="comment">#Airy模型的重力异常导纳</span></div><div class="line">	Zk=<span class="number">2</span>*np.pi*G*(den_2-den_w)*np.exp(-k*d)*(<span class="number">1</span>-np.exp(-k*t))*<span class="number">10</span>**<span class="number">8</span></div><div class="line">	<span class="keyword">return</span> Zk</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func_t</span><span class="params">(Tc,d,den_2,den_3)</span>:</span></div><div class="line">	t=Tc-d*((den_m-den_w)/(den_m-den_c))</div><div class="line">	<span class="comment">#t=Tc-d*((den_2-den_w)/(den_m-den_3))</span></div><div class="line">	<span class="keyword">return</span> t</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func_D</span><span class="params">(Te)</span>:</span></div><div class="line">	D=E*Te**<span class="number">3</span>/<span class="number">12.0</span>/(<span class="number">1</span>-v**<span class="number">2</span>)</div><div class="line">	<span class="keyword">return</span> D</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func_zk_flex</span><span class="params">(Te,k,g,d,t)</span>:</span></div><div class="line">	D=_func_D(Te)</div><div class="line">	phi_ekp=<span class="number">1.0</span>/(D*k**<span class="number">4</span>/(den_m-den_c)/g*<span class="number">10</span>**<span class="number">-3</span>+<span class="number">1</span>)</div><div class="line">	Zk_flex=<span class="number">2</span>*np.pi*G*(den_c-den_w)*np.exp(-k*d)*(<span class="number">1</span>-phi_ekp*np.exp(-k*t))</div><div class="line">	<span class="keyword">return</span> Zk_flex*<span class="number">10</span>**<span class="number">8</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">_func_zk_pratt</span><span class="params">(k,Dcp)</span>:</span></div><div class="line">	zk_pratt=<span class="number">2</span>*np.pi*G*(den_c-den_w)*np.exp(-k*d)*(<span class="number">1</span>-np.exp(-k*Dcp))</div><div class="line">	<span class="keyword">return</span> zk_pratt*<span class="number">10</span>**<span class="number">8</span></div><div class="line"><span class="comment">#1. 图片基本设置：大小，字体等</span></div><div class="line">plt.figure(figsize=(<span class="number">9</span>,<span class="number">6</span>))</div><div class="line"></div><div class="line">k=np.linspace(<span class="number">0.0001</span>,<span class="number">0.25</span>,<span class="number">500</span>)</div><div class="line"><span class="comment">#计算挠曲模型</span></div><div class="line">Te=<span class="number">5</span></div><div class="line">zk_flex1=_func_zk_flex(Te,k,g,d,t)</div><div class="line">plt.plot(k,zk_flex1)</div><div class="line">plt.text(<span class="number">0.03</span>,_func_zk_flex(Te,<span class="number">0.03</span>,g,d,t)+<span class="number">23</span>,<span class="string">"Flexure ($T_&#123;e&#125;\ =$"</span>+str(Te)+<span class="string">" km)"</span>,ha=<span class="string">"left"</span>,va=<span class="string">"top"</span>,rotation=<span class="number">60</span>)</div><div class="line">Te=<span class="number">25</span></div><div class="line">zk_flex1=_func_zk_flex(Te,k,g,d,t)</div><div class="line">plt.plot(k,zk_flex1)</div><div class="line">plt.text(<span class="number">0.012</span>,_func_zk_flex(Te,<span class="number">0.012</span>,g,d,t)+<span class="number">20</span>,<span class="string">"Flexure ($T_&#123;e&#125;\ =$"</span>+str(Te)+<span class="string">" km)"</span>,ha=<span class="string">"left"</span>,va=<span class="string">"top"</span>,rotation=<span class="number">83</span>)</div><div class="line"><span class="comment">#计算Airy模型</span></div><div class="line">zk_airy=_func_ZK_Airy(t,k,d)</div><div class="line">line_airy,=plt.plot(k,zk_airy)</div><div class="line">dashes = [<span class="number">8</span>, <span class="number">3</span>, <span class="number">30</span>, <span class="number">3</span>]  <span class="comment"># 10 points on, 5 off, 100 on, 5 off</span></div><div class="line">line_airy.set_dashes(dashes)</div><div class="line">plt.text(<span class="number">0.125</span>,_func_ZK_Airy(t,<span class="number">0.125</span>,d)<span class="number">-2</span>,<span class="string">"Airy (t = "</span>+str(t)+<span class="string">" km)"</span>,ha=<span class="string">"left"</span>,va=<span class="string">"top"</span>,rotation=<span class="number">-3</span>)</div><div class="line"><span class="comment">#添加Pratt模型</span></div><div class="line">Dcp=<span class="number">113.2</span></div><div class="line">zk_pratt=_func_zk_pratt(k,Dcp)</div><div class="line">plt.plot(k,zk_pratt,<span class="string">":"</span>)</div><div class="line">plt.annotate(<span class="string">"Pratt ($D_&#123;c&#125;^&#123;\\textasciiacute&#125;$ = "</span>+str(Dcp)+<span class="string">"km)"</span>, xy=(<span class="number">0.015</span>, _func_zk_pratt(<span class="number">0.015</span>,Dcp)),</div><div class="line">                xytext=(<span class="number">0.05</span>, <span class="number">74</span>),</div><div class="line">				va=<span class="string">"center"</span>,</div><div class="line">				ha=<span class="string">"left"</span>,</div><div class="line">                bbox=dict(boxstyle=<span class="string">"round"</span>, fc=(<span class="number">1.</span>, <span class="number">0.8</span>, <span class="number">0.8</span>),ec=<span class="string">"none"</span>),</div><div class="line">                arrowprops=dict(arrowstyle=<span class="string">"fancy"</span>,</div><div class="line">                                fc=(<span class="number">1.</span>, <span class="number">0.8</span>, <span class="number">0.8</span>), ec=<span class="string">"none"</span>,</div><div class="line">                                <span class="comment">#patchB=el,</span></div><div class="line">                                connectionstyle=<span class="string">"arc3,rad=0.4"</span>),</div><div class="line">                )</div><div class="line"><span class="comment">#添加一个非均衡地形的重力异常导纳</span></div><div class="line">plt.plot(k,_func_Zk(den_c,d,k,t),<span class="string">'k--'</span>)</div><div class="line">plt.text(<span class="number">0.14</span>,_func_Zk(den_c,d,<span class="number">0.14</span>,t)<span class="number">-2</span>,<span class="string">"Uncompensated: t = "</span>+str(t)+<span class="string">" km"</span>,ha=<span class="string">"left"</span>,va=<span class="string">"center"</span>,rotation=<span class="number">-17</span>)</div><div class="line"><span class="comment">#label</span></div><div class="line">plt.ylabel(<span class="string">"Admittance $Z(k)(mGal\ km^&#123;-1&#125;)$"</span>)</div><div class="line">plt.xlabel(<span class="string">"Wavenumber k ($km^&#123;-1&#125;$)"</span>)</div><div class="line">plt.text(<span class="number">0.18</span>,<span class="number">73</span>,<span class="string">"d = "</span>+str(d)+<span class="string">" km\nt = "</span>+str(t)+<span class="string">" km\n$\\rho_&#123;c&#125;\ =\ "</span>+str(den_c)+<span class="string">"\ kg/m^3$\n$\\rho_&#123;m&#125;$ = "</span>+str(den_m)+<span class="string">"\n$\\rho_&#123;w&#125;$ = "</span>+str(den_w),ha=<span class="string">"left"</span>,va=<span class="string">"top"</span>)</div><div class="line"></div><div class="line"><span class="comment">#设置另一个x轴</span></div><div class="line">xaxis_wavelength=plt.twiny()</div><div class="line">xaxis_wavelength.set_xlabel(<span class="string">u"波长(km)"</span>,fontdict=&#123;<span class="string">"family"</span>: <span class="string">"STKaiti"</span>&#125;)</div><div class="line">xaxis_wavelength.set_xlim(k[<span class="number">0</span>],k[len(k)<span class="number">-1</span>])</div><div class="line">labels=[<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">1000</span>]</div><div class="line">labels_x=[]</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(labels)):</div><div class="line">	labels_x.append(np.pi*<span class="number">2.0</span>/labels[i])</div><div class="line">plt.xticks(labels_x,labels)</div><div class="line"><span class="comment">#设置</span></div><div class="line"><span class="comment"># plt.show()</span></div><div class="line">plt.savefig(<span class="string">u"pdf\\简单挠曲模型重力异常导纳曲线.pdf"</span>)</div><div class="line">plt.savefig(<span class="string">u"png\\简单挠曲模型重力异常导纳曲线.png"</span>,dpi=<span class="number">300</span>)</div></pre></td></tr></table></figure>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>看这绘制表格的功能也真是有点无奈，也就绘制个简单的表格还行<br>| 岩石圈参数        |    常用值            |    表示符号    |    单位            |<br>|:——-                |——–                    |                    |                    |<br>|密度                |$2800    $                |    $\rho_c$    |$kg/m^3$    |<br>|样式模量            |$10^{11}$            |    $E$            |    $N/m^2$    |</p>
<h3 id="源码-2"><a href="#源码-2" class="headerlink" title="源码"></a>源码</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">| 岩石圈参数		|	常用值			|	表示符号		|	单位		|</div><div class="line">|:-------		|--------			|				|			|</div><div class="line">|密度			|$2800	$			|	$\rho_c$	|$kg/m^3$	|</div><div class="line">|样式模量			|$10^&#123;11&#125;$			|	$E$			|	$N/m^2$	|</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;优雅的版面，支持云同步，支持Latex，支持代码高亮等满足这一系列要求，但又不想折腾个人博客搭载，所以选择了&lt;strong&gt;&lt;a href=&quot;https://www.yinxiang.com/&quot;&gt;Evernote&lt;/a&gt;&lt;/strong&gt;配合&lt;strong&gt;&lt;a href=&quot;https://maxiang.io/&quot;&gt;马克飞象&lt;/a&gt;&lt;/strong&gt;写笔记。方便自己回忆，也方便分享、讨论，得益于&lt;strong&gt;&lt;a href=&quot;https://seisman.info/&quot;&gt;Seisman&lt;/a&gt;&lt;/strong&gt;的博客，以后有机会也会给自己搭建一个个人博客把整理的笔记都挂上去。 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="科研经验" scheme="http://yoursite.com/categories/%E7%A7%91%E7%A0%94%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="马克飞象" scheme="http://yoursite.com/tags/%E9%A9%AC%E5%85%8B%E9%A3%9E%E8%B1%A1/"/>
    
      <category term="Evernote" scheme="http://yoursite.com/tags/Evernote/"/>
    
  </entry>
  
</feed>
